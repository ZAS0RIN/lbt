# -*- coding: utf-8 -*-
from app import app, db
from flask import Flask, render_template,flash,redirect, url_for, request
from models import Event, Bet, Team, User
from forms import SetBetForm, SetBetForm2
from flask_login import login_user, login_required, logout_user, current_user


@app.route('/')
def index():
    return render_template('index2.html')

@app.route('/events')
def events():
    events=Event.query.filter_by(is_archive=False).order_by(Event.date.desc()).all()
    events.reverse()
    return render_template('index.html', events=events, title_name='События')


@app.route('/profile')
@login_required
def profile():
    return render_template('profile.html')


@app.route('/event/all/')
def event_all():
    e = Event.query.all()
    return render_template('event.html', events = e, title_name='Все события')



@app.route('/event/<int:id>/', methods=['GET', 'POST'])
@login_required
def event_id(id):
    e = Event.query.filter_by(id=id).first()
    form1=SetBetForm()
    form2=SetBetForm2()
    if e.is_archive:
        form1=None
        form2=None   
        flash('Event old')
    else:
        if form1.validate_on_submit() and form1.value1.data != None:
            print form1.value1.data
            print form2.value2.data
            print 'f1'
            if int(form1.value1.data) < 50:
                flash('Minimum bet 50!')
                return redirect('/events')
            if e.is_archive:
                flash('Old event!')
                return redirect('/events')
            if form1.value1.data > current_user.balance:
                flash('no money, bitch')
                return redirect('/events')
            b = Bet(team_id=e.team1_id,event_id=id,k=e.team1_k, cash=form1.value1.data, author_id=current_user.id)
            db.session.add(b)
            User.query.filter_by(id=current_user.id).first().balance -= form1.value1.data
            db.session.commit()
            flash('gj')
            return redirect(url_for('events'))
        
        if form2.validate_on_submit() and form2.value2.data != None:
            print form1.value1.data
            print form2.value2.data
            print 'f2'
            if form2.value2.data < 50:
                flash('Minimum bet 50!')
                return redirect('/events')
            if e.is_archive:
                flash('Old event!')
                return redirect('/events')
            if form2.value2.data > current_user.balance:
                flash('no money, bitch')
                return redirect('/events')
            b = Bet(team_id=e.team2_id,event_id=id,k=e.team2_k, cash=form2.value2.data, author_id=current_user.id)
            db.session.add(b)
            User.query.filter_by(id=current_user.id).first().balance -= form2.value2.data
            db.session.commit()
            flash('gj')
            return redirect(url_for('events'))
    team1_history = Event.query.filter_by(team1_id=e.team1_id).filter_by(is_archive=True).all()
    team1_history.extend(Event.query.filter_by(team2_id=e.team1_id).filter_by(is_archive=True).all())
    team2_history = Event.query.filter_by(team1_id=e.team2_id).filter_by(is_archive=True).all()
    team2_history.extend(Event.query.filter_by(team2_id=e.team2_id).filter_by(is_archive=True).all())
    try:
        team1_history.remove(e)
        team2_history.remove(e)
    except:
        pass
    return render_template('event.html', events = [e], title_name=e.get_data()[0] + ' - ' + e.get_data()[1], t1h =team1_history, t2h = team2_history, t1name = e.get_data()[0], t2name = e.get_data()[1],form1=form1,form2=form2)


@app.errorhandler(404)
def page_not_found(e):
    return render_template('404.html'), 404
